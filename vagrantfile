# This is a vagrant file for creating a Virtual Development environment
#
# vim: foldmethod=indent:
#
# Usage :
# vagrant init
# vagrant up
# vagrant reload --provision
# vagrant destroy
Vagrant.configure("2") do |config|
  # cf : https://app.vagrantup.com/gusztavvargadr/boxes/ubuntu-desktop
  config.vm.box = "gusztavvargadr/ubuntu-desktop"
  config.vm.network "private_network", ip: "192.168.56.10"
  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    vb.gui = true
    vb.memory = "8192"
    vb.cpus = 6
    # Enable bidirectional copy-paste
    vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
  end

  # Mount local folders
  config.vm.synced_folder "/Users/nbossard/backend", "/home/vagrant/backend"
  config.vm.synced_folder "/Users/nbossard/documentation", "/home/vagrant/documentation"
  config.vm.synced_folder "/Users/nbossard/Downloads", "/home/vagrant/DownloadsHost"

  # port forwarding
  # mongodb
  config.vm.network "forwarded_port", guest: 27017, host: 27017
  # redis
  config.vm.network "forwarded_port", guest: 6379,  host: 6379
  config.vm.network "forwarded_port", guest: 8080, host: 8080

  # Update OS
  config.vm.provision "shell", inline: <<-SHELL
    echo "updating OS"
    sudo apt-get update -yes
    sudo apt-get upgrade --assume-yes
  SHELL

  # Change language to french
  config.vm.provision "shell", inline: <<-SHELL
    echo "changing language to french"
    sudo apt-get install --assume-yes language-pack-fr
    sudo update-locale LANG=fr_FR.UTF-8
    sudo update-locale LANGUAGE=fr_FR.UTF-8
    sudo update-locale LC_ALL=fr_FR.UTF-8
    sudo update-locale LC_CTYPE=fr_FR.UTF-8
    sudo update-locale LC_MESSAGES=POSIX
    sudo update-locale LC_COLLATE=fr_FR.UTF-8
    sudo update-locale LC_MONETARY=fr_FR.UTF-8
    sudo update-locale LC_NUMERIC=fr_FR.UTF-8
    sudo update-locale LC_TIME=fr_FR.UTF-8
  SHELL

  # Change keyboard layout to french mac
  config.vm.provision "shell", inline: <<-SHELL
    echo "changing keyboard layout to french mac"
    sudo sed -i 's/XKBLAYOUT="us"/XKBLAYOUT="fr"/g' /etc/default/keyboard
    sudo sed -i 's/XKBVARIANT=""/XKBVARIANT="mac"/g' /etc/default/keyboard
    sudo sed -i 's/BACKSPACE="guess"/BACKSPACE="guess"/g' /etc/default/keyboard
  SHELL


  # update vim to the latest version
  config.vm.provision "shell", inline: <<-SHELL
    echo "Updating vim"
    sudo add-apt-repository ppa:jonathonf/vim
    sudo apt-get update
  SHELL

  # Install Neovim
  config.vm.provision "shell", inline: <<-SHELL
    echo "Installing neovim"
    sudo apt-get install software-properties-common -y
    sudo add-apt-repository ppa:neovim-ppa/stable -y
    sudo apt-get update
    sudo apt-get install neovim -y
    echo "linking neovim to vim config folder"
    sudo rm -rf /home/vagrant/.config/nvim
    sudo ln -s /home/vagrant/.vim /home/vagrant/.config/nvim
    sudo ln -s /home/vagrant/.vim/vimrc /home/vagrant/.vim/init.vim
  SHELL

  # Install nodejs (required for coc.nvim)
  config.vm.provision "shell", inline: <<-SHELL
    echo "Installing nodejs"
    curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
    sudo apt-get install -y nodejs
  SHELL

  # Install a good terminal font
  # Such as : Hack Nerd Font Mono
  # On mac :
  # brew tap homebrew/cask-fonts
  # brew install --cask font-hack-nerd-font
  config.vm.provision "shell", inline: <<-SHELL
    echo "Installing Hack Nerd Font Mono"
    mkdir -p ~/.local/share/fonts
    cd ~/.local/share/fonts && curl -sfLo "Droid Sans Mono for Powerline Nerd Font Complete.otf" https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/DroidSansMono/complete/Droid%20Sans%20Mono%20Nerd%20Font%20Complete.otf
    echo "TODO change font in term preferences"
  SHELL

  # Install a good terminal
  # Wezterm
  # On mac :
  # brew tap wez/wezterm
  # brew install --cask wez/wezterm/wezterm
  config.vm.provision "shell", inline: <<-SHELL
    echo "Installing Wezterm"
    curl -sLO https://github.com/wez/wezterm/releases/download/20221119-145034-49b9839f/wezterm-20221119-145034-49b9839f.Ubuntu20.04.deb
    sudo apt-get install -y ./wezterm-20221119-145034-49b9839f.Ubuntu20.04.deb
  SHELL

  config.vm.provision "shell", inline: <<-SHELL
    echo "Adding desktop shortcut for wezterm"
    echo "[Desktop Entry]
    Name=Wezterm
    Comment=Wez terminal emulator
    Exec=/usr/bin/wezterm
    Icon=org.wezfurlong.wezterm
    Terminal=false
    Type=Application
    Categories=System;TerminalEmulator;Utility" > /home/vagrant/Desktop/org.wezfurlong.wezterm.desktop
    sudo chmod a+x /home/vagrant/Desktop/org.wezfurlong.wezterm.desktop
  SHELL

  config.vm.provision "shell", inline: <<-SHELL
    echo "generating config file for wezterm"
    mkdir -p /home/vagrant/.config/wezterm
    echo "local wezterm = require 'wezterm';
    return {
      color_scheme = 'Gruvbox Dark',
      font = wezterm.font('Hack Nerd Font Mono'),
      font_size = 12.0,
    } " > /home/vagrant/.config/wezterm/config.lua
  SHELL

  # Install zsh
  config.vm.provision "shell", inline: <<-SHELL
    echo "Installing zsh"
    sudo apt-get install zsh -y
    echo "Creatting zshrc"
    touch ~/.zshrc
  SHELL

  # Install Golang
  config.vm.provision "shell", inline: <<-SHELL
    echo "Installing golang os version"
    sudo apt-get install golang-go --assume-yes
    echo "Installing go latest version"
    FILE=/home/vagrant/go1.17.13.linux-amd64.tar.gz
    if [ ! -f "$FILE" ]; then
      echo "$FILE does not exist downloading it"
      wget -q $FILE
    fi
    echo 'export PATH=/usr/local/go/bin:$PATH' >> /home/vagrant/.bashrc
    echo 'export GOPATH=$HOME/go' >> /home/vagrant/.bashrc
    echo 'export GOPATH=$GOPATH:/home/vagrant/backend'
    echo 'export PATH=$PATH:$GOPATH/bin' >> /home/vagrant/.bashrc
  SHELL

  # Install chrome
  config.vm.provision "shell", inline: <<-SHELL
    echo "Installing chrome"
    sudo sh -c 'echo "deb [arch=amd64] https://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list'
    wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
    sudo apt-get update
    sudo apt-get install google-chrome-stable
  SHELL

  # Install password managers
  config.vm.provision "shell", inline: <<-SHELL
    echo "Installing password manager pass"
    sudo apt-get install pass --assume-yes
  SHELL

  # Install bookmark manager
  config.vm.provision "shell", inline: <<-SHELL
    echo "Installing buku bookmark manager"
    sudo apt-get install buku --assume-yes
  SHELL

  # Retrieving vim config from github
  config.vm.provision "shell", inline: <<-SHELL
    set -x #echo on
    echo "Retrieving vim config from github"
    # rm -rf /home/vagrant/.vim
    runuser -l vagrant -c 'git clone https://github.com/nbossard/dotvim.git /home/vagrant/.vim'
    rm /home/vagrant/.vimrc
    ln -s /home/vagrant/.vim/vimrc /home/vagrant/.vimrc
    rm /home/vagrant/.ideavimrc
    ln -s /home/vagrant/.vim/vimrc /home/vagrant/.ideavimrc
    cd /home/vagrant/.vim

    echo "Install vim-plug"
    runuser -l vagrant -c 'curl -sfLo /home/vagrant/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  SHELL

  # Install extensions required by vim
  config.vm.provision "shell", inline: <<-SHELL
    echo "Install extensions required by vim"
    echo "install code minimap"
    sudo apt-get install cargo
    cargo install --locked code-minimap
    echo 'export PATH=$PATH:/home/vagrant/.cargo/bin' >> /home/vagrant/.bashrc
    echo ""
    echo "install fzf"
    sudo apt-get install fzf
  SHELL

  # Install taskwarrior
  config.vm.provision "shell", inline: <<-SHELL
    echo "Installing taskwarrior"
    sudo apt-get install taskwarrior --assume-yes
    sudo rm -rf /home/vagrant/dotfiles
    echo "Retrieving vim config from github"
    runuser -l vagrant -c 'git clone https://github.com/nbossard/dotfiles.git /home/vagrant/dotfiles' 2> /dev/null
    echo "Linking to config of taskwarrior"
    # remove file if already exists without displaying an error
    rm .taskrc 2> /dev/null
    ln -s dotfiles/taskrc .taskrc
  SHELL

  # Configure git
  config.vm.provision "shell", inline: <<-SHELL
    echo "Configuring git"
    rm .gitconfig 2> /dev/null
    ln -s dotfiles/gitconfig .gitconfig
  SHELL

  # Configure my aliases
  config.vm.provision "shell", inline: <<-SHELL
    echo "Configuring profile file (aliases mostly)"
    echo "# NBO My aliases" >> /home/vagrant/.bashrc
    echo '. ~/dotfiles/profile' >> /home/vagrant/.bashrc
  SHELL

  # Install bat (replacing cat utility)
  config.vm.provision "shell", inline: <<-SHELL
    echo "Installing bat"
    sudo apt-get install bat
    mkdir -p /home/vagrant/.local/bin
    rm /home/vagrant/.local/bin/bat
    ln -s /usr/bin/batcat /home/vagrant/.local/bin/bat
  SHELL

  # Install ripgrep
  config.vm.provision "shell", inline: <<-SHELL
    echo "Installing ripgrep"
    sudo snap install ripgrep --classic 2> /dev/null
  SHELL

  # Install docker
  config.vm.provision "shell", inline: <<-SHELL
    echo "Installing docker"
    sudo snap install docker 2> /dev/null
  SHELL

  # Install mongodb client
  config.vm.provision "shell", inline: <<-SHELL
    echo "Installing mongodb client"
    # -y stands for yes to all, auto accept questions
    sudo apt-get -y install mongodb-clients 2> /dev/null
  SHELL

  # Install gopls server
  config.vm.provision "shell", inline: <<-SHELL
    echo "Installing gopls server"
    sudo snap install gopls --classic 2> /dev/null
  SHELL

  # Install gotop
  config.vm.provision "shell", inline: <<-SHELL
    echo "Installing gotop"
    sudo snap install gotop --classic 2> /dev/null
  SHELL

  # Install mongodb Compass
  config.vm.provision "shell", inline: <<-SHELL
    echo "Installing mongodb Compass"
    cd /tmp
    wget https://downloads.mongodb.com/compass/mongodb-compass_1.34.1_amd64.deb
    # -y stands for yes to all, auto accept questions
    sudo apt-get -y install ./mongodb-compass_1.34.1_amd64.deb
  SHELL

  # Install desktop icon for compass
  config.vm.provision "shell", inline: <<-SHELL
    echo "Installing desktop icon for compass"
    echo "[Desktop Entry]
    Version=1.0
    Type=Application
    Name=MongoDB Compass
    Comment=The MongoDB GUI
    Exec=/usr/bin/mongodb-compass
    Icon=mongodb-compass
    Categories=Development;Database;WebDevelopment;
    " > /home/vagrant/Desktop/mongodb-compass.desktop
    sudo chmod a+x /home/vagrant/Desktop/mongodb-compass.desktop
  SHELL

  # Install lnav for browsing components logs
  config.vm.provision "shell", inline: <<-SHELL
    echo "Installing lnav"
    sudo apt-get install lnav
    # Todo install Mahali lnav file format
    # copy file to /home/vagrant/.lnav/formats/installed
    mkdir -p /home/vagrant/.lnav/formats/installed
    cd /home/vagrant/.lnav/formats/installed
    ln -s ../../../backend/mahalilogformat_lnav.json mahalilogformat_lnav.json
  SHELL

end
